---
name: Chocolatey Package

"on":
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to update (e.g., 1.0.0)'
        required: true
        type: string
  repository_dispatch:
    types: [release-orchestrator]

jobs:
  update-chocolatey:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup GPG (Ubuntu subsystem)
        shell: bash
        run: |
          # Install GPG in Windows Subsystem for Linux (WSL) Ubuntu
          wsl --install --no-distribution
          wsl --set-default-version 2
          wsl --install Ubuntu --no-launch
          wsl -d Ubuntu -e bash -c "apt-get update && apt-get install -y gnupg"

          # Import GPG keys
          echo "${{ secrets.DEB_GPG_PRIVATE_KEY }}" | wsl -d Ubuntu -e gpg --batch --import
          echo "${{ secrets.DEB_GPG_PUBLIC_KEY }}" | wsl -d Ubuntu -e gpg --batch --import

      - name: Install Chocolatey
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          [System.Net.ServicePointManager]::SecurityProtocol = `
            [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
          iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

      - name: Update chocolatey package
        run: |
          $version = "${{ github.event.release.tag_name ||
            github.event.inputs.version || github.event.client_payload.version }}"
          $version = $version -replace '^v', ''
          # Remove git SHA suffix to simplify version (e.g., 0.0.1753960840-gd58826 -> 0.0.1753960840)
          $version = $version -replace '-g[a-f0-9]+$', ''

          # Update version in nuspec
          (Get-Content chocolatey/amp.nuspec) -replace
            '<version>.*</version>', "<version>$version</version>" |
            Set-Content chocolatey/amp.nuspec

          # Update download URL in install script (use original version with SHA for actual download)
          $originalVersion = "${{ github.event.release.tag_name ||
            github.event.inputs.version || github.event.client_payload.version }}"
          $originalVersion = $originalVersion -replace '^v', ''

          # Download the Windows executable to calculate checksum
          $windowsExeUrl = "https://github.com/sourcegraph/amp-packages/" +
            "releases/download/v$originalVersion/amp-windows-x64.exe"
          Write-Host "Downloading Windows executable from: $windowsExeUrl"
          Invoke-WebRequest -Uri $windowsExeUrl -OutFile "amp-windows-x64.exe"
          $windowsChecksum = (Get-FileHash -Path "amp-windows-x64.exe" -Algorithm SHA256).Hash.ToLower()
          Write-Host "Windows executable checksum: $windowsChecksum"

          # Update URL and checksum in install script
          (Get-Content chocolatey/tools/chocolateyinstall.ps1) -replace
            'v[0-9]+\.[0-9]+\.[0-9a-zA-Z\.\-]+', "v$originalVersion" |
            Set-Content chocolatey/tools/chocolateyinstall.ps1

          (Get-Content chocolatey/tools/chocolateyinstall.ps1) -replace
            'REPLACE_WITH_WINDOWS_X64_SHA256', $windowsChecksum |
            Set-Content chocolatey/tools/chocolateyinstall.ps1

          # Clean up downloaded file
          Remove-Item "amp-windows-x64.exe" -Force

      - name: Build chocolatey package
        run: |
          cd chocolatey
          choco pack

      - name: Sign chocolatey package
        shell: bash
        run: |
          cd chocolatey
          for nupkg_file in amp.*.nupkg; do
            if [ -f "$nupkg_file" ]; then
              wsl -d Ubuntu -e bash -c "cd /mnt/c/\$(pwd | sed 's|C:|/mnt/c|' | sed 's|\\\\|/|g') && \
                gpg --batch --yes --pinentry-mode loopback \
                --passphrase '${{ secrets.DEB_GPG_PASSWORD }}' \
                --default-key '${{ secrets.DEB_GPG_KEY_ID }}' \
                --armor --detach-sign '\$nupkg_file'"
            fi
          done

      - name: Test chocolatey package
        run: |
          cd chocolatey
          $nupkgFile = Get-ChildItem -Name "amp.*.nupkg"
          if ($nupkgFile) {
            Write-Host "Testing package: $nupkgFile"
            # Install with local source plus main repo for dependencies
            choco install amp -s ".;https://community.chocolatey.org/api/v2/" -f -y
            amp --help || Write-Host "amp binary installed but may have terminal compatibility issues in CI"
            choco uninstall amp -y
          } else {
            Write-Host "No .nupkg file found to test"
            Get-ChildItem -Name "*.nupkg"
          }

      - name: Upload .nupkg artifact
        uses: actions/upload-artifact@v4
        with:
          name: amp-chocolatey.nupkg
          path: |
            chocolatey/amp.*.nupkg
            chocolatey/amp.*.nupkg.asc

      - name: Attach Chocolatey Package to GitHub Release
        run: |
          $version = "${{ github.event.release.tag_name ||
            github.event.inputs.version || github.event.client_payload.version }}"
          if (-not $version.StartsWith('v')) {
            $version = "v$version"
          }
          gh release upload $version chocolatey/amp.*.nupkg chocolatey/amp.*.nupkg.asc --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish to Chocolatey
        run: |
          cd chocolatey
          $originalVersion = "${{ github.event.release.tag_name ||
            github.event.inputs.version || github.event.client_payload.version }}"
          $originalVersion = $originalVersion -replace '^v', ''
          $cleanVersion = $originalVersion -replace '-g[a-f0-9]+$', ''
          choco push amp.$cleanVersion.nupkg -s https://push.chocolatey.org/ -k ${{ secrets.CHOCO_PUBLISH_TOKEN }}
