---
name: Build Debian Packages

"on":
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to update (e.g., 1.0.0)'
        required: true
        type: string
  repository_dispatch:
    types: [release-orchestrator]

jobs:
  build-deb:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up architecture
        run: |
          if [ "${{ matrix.arch }}" = "arm64" ]; then
            sudo apt-get update
            sudo apt-get install -y gcc-aarch64-linux-gnu
          fi

      - name: Download release binary
        run: |
          version="${{ github.event.release.tag_name ||
            github.event.inputs.version || github.event.client_payload.version }}"
          version="${version#v}"

          if [ "${{ matrix.arch }}" = "amd64" ]; then
            asset_name="amp-linux-x64"
          else
            asset_name="amp-linux-arm64"
          fi

          wget "https://github.com/sourcegraph/amp-cli/releases/download/v${version}/${asset_name}"
          # Create directory and move binary for packaging
          mkdir -p amp-${version}
          cp ${asset_name} amp-${version}/amp
          chmod +x amp-${version}/amp

      - name: Build .deb package
        run: |
          version="${{ github.event.release.tag_name ||
            github.event.inputs.version || github.event.client_payload.version }}"
          version="${version#v}"

          # Update changelog version
          sed -i "s/amp (.*)/amp (${version}-1)/" debian/changelog

          # Install build dependencies
          sudo apt-get update
          sudo apt-get install -y debhelper build-essential

          # Build package
          dpkg-buildpackage -us -uc -b --host-arch=${{ matrix.arch }}

      - name: Upload .deb artifact
        uses: actions/upload-artifact@v4
        with:
          name: amp-${{ matrix.arch }}.deb
          path: ../amp_*.deb
