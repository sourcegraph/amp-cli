---
name: Build Debian Packages

"on":
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: "Version to update (e.g., 1.0.0)"
        required: true
        type: string
  repository_dispatch:
    types: [release-orchestrator]

jobs:
  build-deb:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up architecture
        run: |
          if [ "${{ matrix.arch }}" = "arm64" ]; then
            sudo apt-get update
            sudo apt-get install -y gcc-aarch64-linux-gnu
          fi

      - name: Download release binary
        run: |
          version="${{ github.event.release.tag_name ||
            github.event.inputs.version || github.event.client_payload.version }}"
          version="${version#v}"

          if [ "${{ matrix.arch }}" = "amd64" ]; then
            asset_name="amp-linux-x64"
          else
            asset_name="amp-linux-arm64"
          fi

          wget "https://github.com/sourcegraph/amp-packages/releases/download/v${version}/${asset_name}"
          chmod +x ${asset_name}

          # Create directory structure for debian packaging
          mkdir -p usr/bin
          cp ${asset_name} usr/bin/amp

      - name: Build .deb package
        run: |
          version="${{ github.event.release.tag_name ||
            github.event.inputs.version || github.event.client_payload.version }}"
          version="${version#v}"

          # Update changelog version
          sed -i "1s/amp (.*)/amp (${version}-1) unstable; urgency=medium/" debian/changelog

          # Install build dependencies
          sudo apt-get update
          sudo apt-get install -y debhelper build-essential

          # Create DEBIAN directory structure
          mkdir -p DEBIAN

          # Calculate installed size (in KB)
          size=$(du -k usr/bin/amp | cut -f1)

          # Create control file with correct architecture
          # Copy the debian/control and extract only the Package section
          awk '/^Package:/{pkg=1} pkg && /^$/{exit} pkg{print}' debian/control > DEBIAN/control
          sed -i "s/Architecture: .*/Architecture: ${{ matrix.arch }}/" DEBIAN/control
          echo "Installed-Size: $size" >> DEBIAN/control

          # Build package
          dpkg-deb --build . ../amp_${version}-1_${{ matrix.arch }}.deb

      - name: Upload .deb artifact
        uses: actions/upload-artifact@v4
        with:
          name: amp-${{ matrix.arch }}.deb
          path: ../amp_*_${{ matrix.arch }}.deb
