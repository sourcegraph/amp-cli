---
name: Build Docker Images

"on":
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to update (e.g., 1.0.0)'
        required: true
        type: string
  repository_dispatch:
    types: [release-orchestrator]

concurrency:
  group: docker-images
  cancel-in-progress: true

jobs:
  build-docker:
    runs-on: ubuntu-latest
    if: github.event_name == 'release' ||
      github.event_name == 'workflow_dispatch' ||
      github.event_name == 'repository_dispatch'
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            arch: x64
          - platform: linux/arm64
            arch: arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/Dockerfile
          platforms: ${{ matrix.platform }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            AMP_ARCH=${{ matrix.arch }}
            AMP_VERSION=${{
              github.event.release.tag_name ||
              github.event.inputs.version ||
              github.event.client_payload.version
            }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
