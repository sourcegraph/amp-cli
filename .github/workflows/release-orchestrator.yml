---
name: Release Orchestrator

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'GitHub release tag (e.g., v1.0.0)'
        required: true
        type: string

concurrency:
  group: release-orchestrator
  cancel-in-progress: true

jobs:
  sign-binaries:
    runs-on: ubuntu-latest
    if: |
      github.repository == 'sourcegraph/amp-cli' &&
      (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7

      - name: Wait for release assets to stabilize
        run: sleep 60  # Wait 1 minute

      - name: Setup GPG
        run: |
          echo "${{ secrets.DEB_GPG_PRIVATE_KEY }}" | gpg --batch --import
          echo "${{ secrets.DEB_GPG_PUBLIC_KEY }}" | gpg --batch --import
        env:
          GPG_TTY: $(tty)

      - name: Download and sign release binaries
        run: |
          version="${{ github.event.release.tag_name || github.event.inputs.release_tag }}"

          # Download all binary assets
          gh release download "$version" --pattern "amp-*" --dir ./binaries

          # Sign all downloaded binaries
          cd binaries
          for binary in amp-*; do
            if [ -f "$binary" ]; then
              echo "Signing binary: $binary"
              gpg --batch --yes --pinentry-mode loopback --passphrase "${{ secrets.DEB_GPG_PASSWORD }}" \
                --default-key "${{ secrets.DEB_GPG_KEY_ID }}" \
                --armor --detach-sign "$binary"
            fi
          done

          # Upload signature files to the release
          gh release upload "$version" *.asc --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  orchestrate-packaging:
    runs-on: ubuntu-latest
    needs: sign-binaries
    if: |
      github.repository == 'sourcegraph/amp-cli' &&
      (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    env:
      RELEASE_VERSION: ${{ github.event.release.tag_name || github.event.inputs.release_tag }}
    steps:

      - name: Trigger AUR package update
        uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 # v3.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: release-orchestrator
          client-payload: '{"workflow": "aur.yml", "version": "${{ env.RELEASE_VERSION }}"}'

      - name: Trigger Chocolatey package update
        uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 # v3.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: release-orchestrator
          client-payload: '{"workflow": "chocolatey.yml", "version": "${{ env.RELEASE_VERSION }}"}'

      - name: Trigger Debian package build
        uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 # v3.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: release-orchestrator
          client-payload: '{"workflow": "debian.yml", "version": "${{ env.RELEASE_VERSION }}"}'

      - name: Trigger Docker image build
        uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 # v3.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: release-orchestrator
          client-payload: '{"workflow": "docker.yml", "version": "${{ env.RELEASE_VERSION }}"}'

      - name: Trigger Homebrew formula update
        uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 # v3.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: release-orchestrator
          client-payload: '{"workflow": "homebrew.yml", "version": "${{ env.RELEASE_VERSION }}"}'

      - name: Trigger Nix package update
        uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 # v3.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: release-orchestrator
          client-payload: '{"workflow": "nix.yml", "version": "${{ env.RELEASE_VERSION }}"}'

      - name: Trigger RPM package build
        uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 # v3.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: release-orchestrator
          client-payload: '{"workflow": "rpm.yml", "version": "${{ env.RELEASE_VERSION }}"}'

      - name: Trigger Winget package update
        uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 # v3.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: release-orchestrator
          client-payload: '{"workflow": "winget.yml", "version": "${{ env.RELEASE_VERSION }}"}'

  orchestrate-repositories:
    runs-on: ubuntu-latest
    needs: [sign-binaries, orchestrate-packaging]
    if: |
      github.repository == 'sourcegraph/amp-cli' &&
      (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    env:
      RELEASE_VERSION: ${{ github.event.release.tag_name || github.event.inputs.release_tag }}
    steps:
      - name: Wait for package builds to complete
        run: sleep 300  # Wait 5 minutes for builds to complete

      - name: Trigger repository builds
        uses: peter-evans/repository-dispatch@ff45666b9427631e3450c54a1bcbee4d9ff4d7c0 # v3.0.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: release-orchestrator
          client-payload: '{"workflow": "repositories.yml", "version": "${{ env.RELEASE_VERSION }}"}'
