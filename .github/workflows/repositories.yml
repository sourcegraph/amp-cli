---
name: Build Package Repositories

"on":
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to update (e.g., 1.0.0)'
        required: true
        type: string
  repository_dispatch:
    types: [release-orchestrator]

concurrency:
  group: package-repositories
  cancel-in-progress: true

jobs:
  build-repositories:
    runs-on: ubuntu-latest
    if: github.event_name == 'release' ||
      github.event_name == 'workflow_dispatch' ||
      github.event_name == 'repository_dispatch'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup GPG
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
        run: |
          if [ -n "$GPG_PRIVATE_KEY" ]; then
            echo "$GPG_PRIVATE_KEY" | gpg --import --batch
            echo "GPG_KEY_ID=$GPG_KEY_ID" >> $GITHUB_ENV
          else
            echo "GPG_PRIVATE_KEY secret not set, skipping GPG setup"
            echo "GPG_KEY_ID=" >> $GITHUB_ENV
          fi

      - name: Download Debian artifacts
        uses: dawidd6/action-download-artifact@v11
        with:
          workflow: debian.yml
          name: amp-amd64.deb
          path: artifacts/

      - name: Download Debian artifacts (arm64)
        uses: dawidd6/action-download-artifact@v11
        with:
          workflow: debian.yml
          name: amp-arm64.deb
          path: artifacts/

      - name: Download RPM artifacts
        uses: dawidd6/action-download-artifact@v11
        with:
          workflow: rpm.yml
          name: amp-x86_64.rpm
          path: artifacts/

      - name: Download RPM artifacts (aarch64)
        uses: dawidd6/action-download-artifact@v11
        with:
          workflow: rpm.yml
          name: amp-aarch64.rpm
          path: artifacts/

      - name: Install repository tools
        run: |
          sudo apt-get update
          sudo apt-get install -y createrepo-c dpkg-dev

      - name: Prepare package directories
        run: |
          mkdir -p debs rpms
          find artifacts -name "*.deb" -exec cp {} debs/ \;
          find artifacts -name "*.rpm" -exec cp {} rpms/ \;

      - name: Build Debian repository
        run: |
          chmod +x scripts/build-debian-repo.sh
          ./scripts/build-debian-repo.sh debs repository/debian

      - name: Build RPM repository
        run: |
          chmod +x scripts/build-rpm-repo.sh
          ./scripts/build-rpm-repo.sh rpms repository/rpm

      - name: Create release assets
        run: |
          # Create repository archives
          tar -czf debian-repo.tar.gz -C repository debian
          tar -czf rpm-repo.tar.gz -C repository rpm

          # Copy GPG key to release location
          mkdir -p release-assets/gpg
          cp repository/gpg/amp-cli.asc release-assets/gpg/ ||
            echo "GPG key not found, will be created manually"

      - name: Upload repositories to release
        run: |
          version="${{ github.event.release.tag_name ||
            github.event.inputs.version || github.event.client_payload.version }}"
          if [[ ! "$version" =~ ^v ]]; then
            version="v${version}"
          fi
          gh release upload "$version" \
            debian-repo.tar.gz \
            rpm-repo.tar.gz \
            release-assets/gpg/amp-cli.asc \
            --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to GitHub Pages (repositories)
        if: github.ref == 'refs/heads/main'
        run: |
          # Copy repository files to a GitHub Pages compatible structure
          mkdir -p gh-pages
          cp -r repository/* gh-pages/

          # Create index.html for repository listing
          cat > gh-pages/index.html <<EOF
          <!DOCTYPE html>
          <html>
          <head>
              <title>Amp CLI Package Repositories</title>
          </head>
          <body>
              <h1>Amp CLI Package Repositories</h1>
              <ul>
                  <li><a href="debian/">Debian/Ubuntu Repository</a></li>
                  <li><a href="rpm/">RHEL/Fedora Repository</a></li>
                  <li><a href="gpg/">GPG Keys</a></li>
              </ul>
          </body>
          </html>
          EOF

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        if: github.ref == 'refs/heads/main'
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./gh-pages
          destination_dir: releases/download
